const postcss = require("postcss");
const fs = require("fs");

const list = [
  ".body",
  ".nofoot",
  ".visa_list_body",
  ".l_top_con",
  ".vcm-pop-full",
  ".ios_outer_click_fix",
  ".vcm-pop-layout",
  ".fadeInUp",
  ".vcm-pop-white",
  ".vcm-pop-hd",
  ".text",
  ".ui-common-iconfont",
  ".close_pop",
  ".vcm-pop-bd",
  ".no-pd-bottom",
  ".m_mask",
  "#mask_7",
  ".m_mask_bd",
  ".m_mask_close",
  "#popUpComp",
  ".hidden",
  ".vcm-close-mask",
  ".fadeOutDown",
  ".v_bg_mod01",
  ".record_video_tracelog",
  ".detail_title01",
  ".visa_video_mod",
  ".visa_video_box",
  ".js_img",
  ".video_bg",
  ".video_txt",
  ".txt1",
  ".video_btn2",
  ".video_play_btn",
  ".video_btn1",
  ".scope-of-acceptance__content",
  ".show_mod",
  ".down",
  ".up",
  ".m_banner",
  ".m_banner_default",
  ".visa_detail_banner",
  ".m_proinfo",
  ".l_inf",
  ".flag_img",
  ".m_pronum",
  ".m_linet",
  ".r_num",
  ".detail_bottom",
  ".detail_bottom_box",
  ".detail_collect",
  ".detail_im",
  ".detail_btn_orange",
  ".detail_btn_disable",
  ".collect_pop",
  ".top_con",
  ".g_iconfont",
  ".collect_icon",
  ".see_list_btn",
  ".notice_r",
  ".new_visa_comment",
  ".gapLine",
  ".line",
  ".coupon",
  ".wrapper",
  ".tip",
  ".list",
  ".item",
  ".count",
  ".arrow_right",
  ".m_drop",
  ".no_m_drop",
  ".m_dropcon",
  ".m_list_box",
  ".m_lj_list",
  ".m_dropicon_1",
  ".list_txt",
  ".m_mask_list",
  ".extra-notice-attention__content",
  ".trans_cont",
  ".hidden_text",
  ".show_all_trans",
  ".tip_num",
  ".icon_num",
  ".trans_title",
  ".handle-procedure__description",
  ".visa-video__a-goto",
  ".visa_video",
  ".videoimg",
  ".txt",
  ".d_sudoku_list",
  ".t2",
  ".t1",
  ".js_open_popupInfo",
  ".icon_unit_base",
  ".icon_help",
  ".icon_right",
  ".notice_pop_txt",
  ".dot",
  ".splitLine",
  ".pop_subTitle",
  ".pop_subTitle_desc",
  ".pop_subTitle_content",
  ".m_profile",
  ".m_bigtitle",
  ".m_feeling",
  ".m_big_tit",
  ".m_fwr",
  ".m_big_price",
  ".price_nb",
  ".m_exp_t",
  ".icon",
  ".icon01",
  ".m_icon_mod",
  ".tag_exp_box",
  ".tag_exp_item",
  ".icon03",
  ".icon02",
  ".serve_m_r",
  ".service_cont",
  ".m_safeguard_list",
  ".weixin_banner",
  ".mail_btn",
  ".material_stipulation",
  ".Info_icon",
  ".tab_mod01",
  ".js_material_tab",
  ".main",
  "#js_tabslide_cost",
  ".js_material_tab_job",
  ".materials_list",
  ".left",
  ".js_click_material_stuff",
  ".mat_main",
  ".record_material_module_tracelog",
  ".img_cont",
  ".mat_type",
  ".tip02",
  ".verification-code_loading",
  ".verification_loading_item",
  ".load_visa_box",
  ".warp_z",
  ".js_close_email_mask",
  ".send_visa_box",
  "#sendEmailMaskForm",
  ".send_hd",
  ".send_cancel_btn",
  ".send_cont",
  ".sel_class",
  ".send_free",
  ".free_choose",
  ".send_input",
  ".js_accept_material_email",
  ".verification_show",
  ".verification-code",
  ".m_book_info",
  ".d_loopfade",
  ".m_book_info_con",
  ".m_sixslogo",
  ".m_sixscon",
  ".ease_v",
  ".pop_box",
  ".pop_box_tips",
  ".pop_bd",
  ".tit_tc_1",
  ".text_tc",
  ".pop_tips_foot_f",
  ".btn_aut",
  ".btn_b",
  ".cui-layer-padding",
  ".animationIn",
  ".animationOut",
  ".cui-layer-content",
  ".cui-pop-box",
  "cm-overlay-out",
  ".cp-h5-main",
  ".cp-Network-loadFailed",
  ".loadFailed-box",
  ".loadFailed-animate",
  ".btns",
  ".btn-retry",
  ".m_header",
  ".m_iosapp",
  ".m_icon_back",
  ".fl",
  ".header_IM_icon_wrapper",
  ".IM_icon",
  ".m_icon_list",
  ".fr",
  ".visa-cm-pop",
  ".visa-icon-pop-triangle",
  ".visa-cm-pop-bd",
  ".visa-cm-pop-list",
  ".msg_sum",
  ".l_visa_top",
  ".visa_richwarning_panel",
  ".visa_richwarning",
  ".visa_richwarning_more",
  ".visa_richwarning_con",
  ".visa_richwarning_contitle",
  ".visa_richwarning_item",
  ".high",
  ".mid",
  ".low",
  "#portal",
];

fs.readFile("test.css", (err, css) => {
  const AST = postcss.parse(css);
  let atruleNode = [];
  let ruleNode = [];
  AST.nodes.map((it) => {
    if (it.type !== "atrule" && it.type !== "rule") {
      console.log(it.type);
    }
    if (it.type === "atrule") {
      atruleNode.push(it);
    } else {
      for (const classname of list) {
        if (it.selector && it.selector.includes(classname)) {
          ruleNode.push(it);
        }
      }
    }
  });
  AST.nodes = atruleNode;
  let atruleCSS = "";
  let ruleCSS = "";
  postcss.stringify(AST, function (str) {
    atruleCSS += str;
  });
  fs.writeFile("dist/atruleCSS.css", atruleCSS, () => {});
  AST.nodes = ruleNode;
  postcss.stringify(AST, function (str) {
    ruleCSS += str;
  });
  fs.writeFile("dist/ruleCSS.css", ruleCSS, () => {});
});
